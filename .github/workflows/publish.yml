name: publish

on: [ push ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{github.repository}}

jobs:
  build-and-push-image:
    name: Build and push image
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{env.REGISTRY}}
          username: ${{secrets.PKG_REGISTRY_USERNAME}}
          password: ${{secrets.PKG_REGISTRY_RW_TOKEN}}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{env.REGISTRY}}/${{env.IMAGE_NAME}}
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{steps.meta.outputs.tags}}
          labels: ${{steps.meta.outputs.labels}}
  build-distribution:
    name: Build distribution
    needs: build-and-push-image
    runs-on: ubuntu-20.04
    container:
      image: ghcr.io/openmcusw/bsw_code_gen:master
      credentials:
        username: ${{secrets.PKG_REGISTRY_USERNAME}}
        password: ${{secrets.PKG_REGISTRY_RW_TOKEN}}
      volumes:
        - ${{github.workspace}}:/usr/project/bsw_code_gen
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Build dist
        run: python3 -m build --sdist --wheel
      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: dist
          path: dist
  publish-package:
    name: Publish package
    needs: [ build-distribution ]
    runs-on: ubuntu-20.04
    environment:
      name: pypi
      url: https://pypi.org/p/bsw-code-gen
    permissions:
      id-token: write
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist
      - name: Publish package on Python Package Index
        uses: pypa/gh-action-pypi-publish@release/v1
